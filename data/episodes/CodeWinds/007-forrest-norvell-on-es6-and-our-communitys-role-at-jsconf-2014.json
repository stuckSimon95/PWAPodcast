{"title":"007 Forrest Norvell on ES6 and our community's role at JSConf 2014","description":"<div class=\"iframe-video\"><br><br></div>\n\n<p><a href=\"http://youtu.be/kvEnDdFAUyI\">Watch video on YouTube</a></p>\n<div id=\"toc\"><ol><li><a href=\"#episode_info\">Episode Info</a></li><li><a href=\"#episode_notes\">Episode Notes</a><ol><li><a href=\"#links\">Links</a></li><li><a href=\"#videos\">Videos</a></li></ol></li></ol></div>\n\n<a name=\"episode_info\"></a><h2 id=\"episode-info\">Episode Info</h2>\n<ul>\n<li>Episode: CW 007</li>\n<li>Published: June 23rd, 2014</li>\n<li>Tags: nodejs, js,es6,jsconf</li>\n<li>Duration: 38:33</li>\n</ul>\n<a name=\"episode_notes\"></a><h2 id=\"episode-notes\">Episode Notes</h2>\n<ul>\n<li>01:36 - Forrest explains his new position at <a href=\"http://www.npmjs.com/\" title=\"npm Inc. website\">npm Inc.</a></li>\n<li>02:20 - Discussion of Forrest’s JSConf 2014 talk</li>\n<li>03:30 - Rise of community standards, Douglas Crockford’s the Good Parts, John Resig jQuery, Promises A+ standard</li>\n<li>05:50 - Standards committees, an inside look</li>\n<li>08:00 - ES4, ES5, Harmony, ES7 (champion for each feature)</li>\n<li>10:00 - <a href=\"http://test262.ecmascript.org/\" title=\"ECMAScript Language test262\">test262</a> - conformance test suite</li>\n<li>11:58 - Our community has the power to figure out what features in ES6 are useful. Sort out the parts that are genuinely useful. Figure out the good parts now.</li>\n<li>14:48 - Module proposal benefited from critical discussions from the community</li>\n<li>16:00 - Tools for using ES6 features now</li>\n<li>17:26 - Development community needs to get on top of things and teach how we use the features with emphasis on the compelling parts.</li>\n<li>18:50 - Forrest no longer recommends Crockford’s Good Parts to new developers because half is scar tissue and dogma, instead Dave Herman’s <a href=\"http://effectivejs.com/\" title=\"Effective JavaScript by David Herman\">Effective JavaScript</a> which gives them a mental toolkit to determine their own style</li>\n<li>20:55 - Don’t concentrate on what’s cool, but concentrate on what’s stable and effective. As an educator be conservative.</li>\n<li>21:29 - Warnings from Java, Perl history</li>\n<li>24:00 - Typescript and Coffeescript bring things to the table but they could fragment the community</li>\n<li>24:40 - ES timeline</li>\n<li>26:30 - Features need enough examination to ensure they are finished</li>\n<li>28:00 - Keeping some things in user land to see what community comes up with. Developers as leaders in this transition.</li>\n<li>29:00 - npm growth, npm Inc dev ops, addressing pain points in npm CLI</li>\n<li>34:30 - All software languages have something that is terrible. Community is something that makes Node.js special.</li>\n<li>35:45 - Node.js in the enterprise is happening very rapidly. A very interesting time to be in the middle of this evolution.</li>\n</ul>\n<a name=\"links\"></a><h3 id=\"links\">Links</h3>\n<ul>\n<li>Forrest Norvell, npm product maker at npm Inc. <a href=\"https://twitter.com/othiym23\">twitter</a></li>\n<li><a href=\"http://www.npmjs.com/\" title=\"npm Inc. website\">npm Inc.</a> - npm, Inc. supports the JavaScript community by providing the registry where developers publish and share packaged open-source modules.</li>\n<li><a href=\"https://github.com/google/traceur-compiler\">traceur</a> - Traceur is a JavaScript.next-to-JavaScript-of-today compiler. Compile ES6 code into JS which can be used by today’s browsers.</li>\n<li><a href=\"https://github.com/paulmillr/es6-shim/\">es6-shim</a> - Provides compatibility shims so that legacy JavaScript engines behave as closely as possible to ECMAScript 6 (Harmony).</li>\n<li><a href=\"http://square.github.io/es6-module-transpiler/\">es6-module-transpiler</a> - ES6 Module Transpiler is a JavaScript library for converting JavaScript files written using the ES6 draft specification module syntax to existing library-based module systems such as AMD, CommonJS, or simply globals.</li>\n<li><a href=\"http://sweetjs.org/\">sweet.js</a> - Macros for javascript which can be used to add in ES6 features.</li>\n<li><a href=\"https://github.com/thlorenz/es6ify\">es6ify</a> - browserify v2 transform to compile JavaScript.next (ES6) to JavaScript.current (ES5) on the fly.</li>\n<li><a href=\"http://kangax.github.io/compat-table/es6/\">ES6 compatibility table</a> - ES6 compatibility table, comparing browser versions, Node.js. Links to ES6 feature descriptions.</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey\">Spider Monkey</a> - Firefox JS engine written in C++. Currently Spider Monkey is leading in the number of ES6 features that are implemented. (56/66 according to Kangax)</li>\n<li><a href=\"http://effectivejs.com/\" title=\"Effective JavaScript by David Herman\">Effective JavaScript</a> - David Herman’s book</li>\n<li>Jeff Barczewski, Founder, CodeWinds <a href=\"https://twitter.com/jeffbski\">twitter</a></li>\n<li>CodeWinds <a href=\"https://twitter.com/codewinds\">twitter</a></li>\n</ul>\n<a name=\"videos\"></a><h3 id=\"videos\">Videos</h3>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=MjrP-P6Pv4I&amp;index=21&amp;list=PL37ZVnwpeshFXOP2lqCUykYPXYNsK_fgN\">JSConf 2014 Talk</a></li>\n</ul>","pubdate":"2014-06-24T01:00:00.000Z","link":"http://codewinds.com/podcast/007.html","guid":"http://codewinds.com/podcast/007.html","image":"http://codewinds.com/assets/codewinds/codewinds-podcast-300.png","podcast":{"title":"CodeWinds - Leading edge web developer news and training | javascript / React.js / Node.js / HTML5 / web development - Jeff Barczewski","description":"Keep up with the latest web developer technologies and news covering javascript, React.js, Node.js, HTML5. Learn the current best practices in web and mobile app development.","image":"http://codewinds.com/assets/codewinds/codewinds-podcast-1400.png"}}